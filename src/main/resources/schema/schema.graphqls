type Movie {
    id: ID!
    title: String!
    releaseYear: Int
    director: String
    genre: String
    rating: Float
    actors: [Actor]
}

type Actor {
    id: ID!
    name: String!
    birthYear: Int
}

type Query {
    movie(id: ID!): Movie
    movies: [Movie]
    moviesByGenre(genre: String!): [Movie]
    actor(id: ID!): Actor
    actors: [Actor]
    searchMovies(filter: MovieFilter): [Movie]
}

# Input type
input MovieInput {
    title: String!
    releaseYear: Int
    director: String
    genre: String
    rating: Float
    actorIds: [ID!]
}

# Response type
type MovieResponse {
    success: Boolean!
    message: String
    movie: Movie
}

type Mutation {
    createMovie(input: MovieInput!): MovieResponse!
    updateMovie(id: ID!, input: MovieInput!): MovieResponse!
    deleteMovie(id: ID!): MovieResponse!
}

input MovieFilter {
    title: String
    genre: String
    minRating: Float
    maxRating: Float
    releaseYearFrom: Int
    releaseYearTo: Int
}
